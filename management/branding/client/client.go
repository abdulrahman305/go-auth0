// Code generated by Fern. DO NOT EDIT.

package client

import (
	context "context"
	management "github.com/auth0/go-auth0/v2/management"
	client "github.com/auth0/go-auth0/v2/management/branding/phone/client"
	templates "github.com/auth0/go-auth0/v2/management/branding/templates"
	themes "github.com/auth0/go-auth0/v2/management/branding/themes"
	core "github.com/auth0/go-auth0/v2/management/core"
	internal "github.com/auth0/go-auth0/v2/management/internal"
	option "github.com/auth0/go-auth0/v2/management/option"
)

type Client struct {
	WithRawResponse *RawClient
	Templates       *templates.Client
	Themes          *themes.Client
	Phone           *client.Client

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		Templates:       templates.NewClient(options),
		Themes:          themes.NewClient(options),
		Phone:           client.NewClient(options),
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

// Retrieve branding settings.
func (c *Client) Get(
	ctx context.Context,
	opts ...option.RequestOption,
) (*management.GetBrandingResponseContent, error) {
	response, err := c.WithRawResponse.Get(
		ctx,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Update branding settings.
func (c *Client) Update(
	ctx context.Context,
	request *management.UpdateBrandingRequestContent,
	opts ...option.RequestOption,
) (*management.UpdateBrandingResponseContent, error) {
	response, err := c.WithRawResponse.Update(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
