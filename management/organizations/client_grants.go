// Code generated by Fern. DO NOT EDIT.

package organizations

type AssociateOrganizationClientGrantRequestContent struct {
	// A Client Grant ID to add to the organization.
	GrantID string `json:"grant_id" url:"-"`
}

type ListOrganizationClientGrantsRequestParameters struct {
	// Optional filter on audience of the client grant.
	Audience *string `json:"-" url:"audience,omitempty"`
	// Optional filter on client_id of the client grant.
	ClientID *string `json:"-" url:"client_id,omitempty"`
	// Optional filter on the ID of the client grant. Must be URL encoded and may be specified multiple times (max 10).<br /><b>e.g.</b> <i>../client-grants?grant_ids=id1&grant_ids=id2</i>
	GrantIDs []*string `json:"-" url:"grant_ids,omitempty"`
	// Page index of the results to return. First page is 0.
	Page *int `json:"-" url:"page,omitempty"`
	// Number of results per page. Defaults to 50.
	PerPage *int `json:"-" url:"per_page,omitempty"`
	// Return results inside an object that contains the total result count (true) or as a direct array of results (false, default).
	IncludeTotals *bool `json:"-" url:"include_totals,omitempty"`
}
