// Code generated by Fern. DO NOT EDIT.

package emails

import (
	management "github.com/auth0/go-auth0/v2/management"
)

type CreateEmailProviderRequestContent struct {
	Name management.EmailProviderNameEnum `json:"name" url:"-"`
	// Whether the provider is enabled (true) or disabled (false).
	Enabled *bool `json:"enabled,omitempty" url:"-"`
	// Email address to use as "from" when no other address specified.
	DefaultFromAddress *string                                                           `json:"default_from_address,omitempty" url:"-"`
	Credentials        *management.EmailProviderCredentialsSchema                        `json:"credentials,omitempty" url:"-"`
	Settings           *management.EmailSpecificProviderSettingsWithAdditionalProperties `json:"settings,omitempty" url:"-"`
}

type GetEmailProviderRequestParameters struct {
	// Comma-separated list of fields to include or exclude (dependent upon include_fields) from the result. Leave empty to retrieve `name` and `enabled`. Additional fields available include `credentials`, `default_from_address`, and `settings`.
	Fields *string `json:"-" url:"fields,omitempty"`
	// Whether specified fields are to be included (true) or excluded (false).
	IncludeFields *bool `json:"-" url:"include_fields,omitempty"`
}

type UpdateEmailProviderRequestContent struct {
	Name *management.EmailProviderNameEnum `json:"name,omitempty" url:"-"`
	// Whether the provider is enabled (true) or disabled (false).
	Enabled *bool `json:"enabled,omitempty" url:"-"`
	// Email address to use as "from" when no other address specified.
	DefaultFromAddress *string                                                           `json:"default_from_address,omitempty" url:"-"`
	Credentials        *management.EmailProviderCredentialsSchema                        `json:"credentials,omitempty" url:"-"`
	Settings           *management.EmailSpecificProviderSettingsWithAdditionalProperties `json:"settings,omitempty" url:"-"`
}
