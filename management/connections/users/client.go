// Code generated by Fern. DO NOT EDIT.

package users

import (
	context "context"
	connections "github.com/auth0/go-auth0/v2/management/connections"
	core "github.com/auth0/go-auth0/v2/management/core"
	internal "github.com/auth0/go-auth0/v2/management/internal"
	option "github.com/auth0/go-auth0/v2/management/option"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

// Deletes a specified connection user by its email (you cannot delete all users from specific connection). Currently, only Database Connections are supported.
func (c *Client) DeleteByEmail(
	ctx context.Context,
	// The id of the connection (currently only database connections are supported)
	id string,
	request *connections.DeleteConnectionUsersByEmailQueryParameters,
	opts ...option.RequestOption,
) error {
	_, err := c.WithRawResponse.DeleteByEmail(
		ctx,
		id,
		request,
		opts...,
	)
	if err != nil {
		return err
	}
	return nil
}
