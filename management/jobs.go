// Code generated by Fern. DO NOT EDIT.

package management

import (
	json "encoding/json"
	fmt "fmt"

	internal "github.com/auth0/go-auth0/v2/management/internal"
)

type GetJobResponseContent struct {
	// Status of this job.
	Status string `json:"status" url:"status"`
	// Type of job this is.
	Type string `json:"type" url:"type"`
	// When this job was created.
	CreatedAt *string `json:"created_at,omitempty" url:"created_at,omitempty"`
	// ID of this job.
	ID string `json:"id" url:"id"`
	// connection_id of the connection this job uses.
	ConnectionID *string `json:"connection_id,omitempty" url:"connection_id,omitempty"`
	// URL to download the result of this job.
	Location *string `json:"location,omitempty" url:"location,omitempty"`
	// Completion percentage of this job.
	PercentageDone *int `json:"percentage_done,omitempty" url:"percentage_done,omitempty"`
	// Estimated time remaining before job completes.
	TimeLeftSeconds *int               `json:"time_left_seconds,omitempty" url:"time_left_seconds,omitempty"`
	Format          *JobFileFormatEnum `json:"format,omitempty" url:"format,omitempty"`
	// Status details.
	StatusDetails *string `json:"status_details,omitempty" url:"status_details,omitempty"`

	ExtraProperties map[string]interface{} `json:"-" url:"-"`

	rawJSON json.RawMessage
}

func (g *GetJobResponseContent) GetStatus() string {
	if g == nil {
		return ""
	}
	return g.Status
}

func (g *GetJobResponseContent) GetType() string {
	if g == nil {
		return ""
	}
	return g.Type
}

func (g *GetJobResponseContent) GetCreatedAt() *string {
	if g == nil {
		return nil
	}
	return g.CreatedAt
}

func (g *GetJobResponseContent) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

func (g *GetJobResponseContent) GetConnectionID() *string {
	if g == nil {
		return nil
	}
	return g.ConnectionID
}

func (g *GetJobResponseContent) GetLocation() *string {
	if g == nil {
		return nil
	}
	return g.Location
}

func (g *GetJobResponseContent) GetPercentageDone() *int {
	if g == nil {
		return nil
	}
	return g.PercentageDone
}

func (g *GetJobResponseContent) GetTimeLeftSeconds() *int {
	if g == nil {
		return nil
	}
	return g.TimeLeftSeconds
}

func (g *GetJobResponseContent) GetFormat() *JobFileFormatEnum {
	if g == nil {
		return nil
	}
	return g.Format
}

func (g *GetJobResponseContent) GetStatusDetails() *string {
	if g == nil {
		return nil
	}
	return g.StatusDetails
}

func (g *GetJobResponseContent) GetExtraProperties() map[string]interface{} {
	return g.ExtraProperties
}

func (g *GetJobResponseContent) UnmarshalJSON(data []byte) error {
	type embed GetJobResponseContent
	var unmarshaler = struct {
		embed
	}{
		embed: embed(*g),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*g = GetJobResponseContent(unmarshaler.embed)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.ExtraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetJobResponseContent) MarshalJSON() ([]byte, error) {
	type embed GetJobResponseContent
	var marshaler = struct {
		embed
	}{
		embed: embed(*g),
	}
	return internal.MarshalJSONWithExtraProperties(marshaler, g.ExtraProperties)
}

func (g *GetJobResponseContent) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}
