// Code generated by Fern. DO NOT EDIT.

package client

import (
	option "github.com/auth0/go-auth0/v2/management/option"
	assert "github.com/stretchr/testify/assert"
	http "net/http"
	testing "testing"
	time "time"
)

func TestNewWithOptions(t *testing.T) {
	t.Run("default", func(t *testing.T) {
		c := NewWithOptions()
		assert.Empty(t, c.baseURL)
	})

	t.Run("base url", func(t *testing.T) {
		c := NewWithOptions(
			option.WithBaseURL("test.co"),
		)
		assert.Equal(t, "test.co", c.baseURL)
	})

	t.Run("http client", func(t *testing.T) {
		httpClient := &http.Client{
			Timeout: 5 * time.Second,
		}
		c := NewWithOptions(
			option.WithHTTPClient(httpClient),
		)
		assert.Empty(t, c.baseURL)
	})

	t.Run("http header", func(t *testing.T) {
		header := make(http.Header)
		header.Set("X-API-Tenancy", "test")
		c := NewWithOptions(
			option.WithHTTPHeader(header),
		)
		assert.Empty(t, c.baseURL)
		assert.Equal(t, "test", c.options.HTTPHeader.Get("X-API-Tenancy"))
	})
}
